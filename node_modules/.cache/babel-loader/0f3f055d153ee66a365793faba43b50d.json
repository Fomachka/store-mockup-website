{"ast":null,"code":"import { ADD_TO_CART, CLEAR_CART, COUNT_CART_TOTALS, REMOVE_CART_ITEM, TOGGLE_CART_ITEM_AMOUNT } from \"../actions\";\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const {\n      id,\n      color,\n      amount,\n      product\n    } = action.payload;\n    const tempItem = state.cart.find(item => item.id === id + color);\n\n    if (tempItem) {\n      const tempCart = state.cart.map(cartItem => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n\n          if (newAmount > cartItem.max) {\n            newAmount = cartItem.max;\n          }\n\n          return { ...cartItem,\n            amount: newAmount\n          };\n        } else {\n          return cartItem;\n        }\n      });\n      return { ...state,\n        cart: tempCart\n      };\n    } else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock\n      };\n      return { ...state,\n        cart: [...state.cart, newItem]\n      };\n    }\n  }\n\n  if (action.type === REMOVE_CART_ITEM) {\n    return { ...state,\n      cart: state.cart.filter(item => item.id !== action.payload)\n    };\n  }\n\n  if (action.type === CLEAR_CART) {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === TOGGLE_CART_ITEM_AMOUNT) {\n    const {\n      id,\n      value\n    } = action.payload;\n    const tempCart = state.cart.map(item => {\n      console.log(item);\n\n      if (item.id === id) {\n        if (value === \"inc\") {\n          let newAmount = item.amount + 1;\n\n          if (newAmount > item.max) {\n            newAmount = item.max;\n          }\n\n          return { ...item,\n            amount: newAmount\n          };\n        } else {\n          let newAmount = item.amount - 1;\n\n          if (newAmount < 1) {\n            newAmount = 1;\n          }\n\n          return { ...item,\n            amount: newAmount\n          };\n        }\n      } else {\n        return item;\n      }\n    });\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === COUNT_CART_TOTALS) {\n    const {\n      new_amount,\n      new_items\n    } = state.cart.reduce((total, item) => {\n      const {\n        amount,\n        price\n      } = item;\n      total.new_items += amount;\n      total.new_amount += price * amount;\n      return total;\n    }, {\n      new_items: 0,\n      new_amount: 0\n    });\n    return { ...state,\n      total_items: new_items,\n      total_amount: new_amount\n    };\n  }\n\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;","map":{"version":3,"sources":["/Users/fomachka/Documents/My React Projects/shopping-app/src/reducers/cart_reducer.js"],"names":["ADD_TO_CART","CLEAR_CART","COUNT_CART_TOTALS","REMOVE_CART_ITEM","TOGGLE_CART_ITEM_AMOUNT","cart_reducer","state","action","type","id","color","amount","product","payload","tempItem","cart","find","item","tempCart","map","cartItem","newAmount","max","newItem","name","image","images","url","price","stock","filter","value","console","log","new_amount","new_items","reduce","total","total_items","total_amount","Error"],"mappings":"AAAA,SACEA,WADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,gBAJF,EAKEC,uBALF,QAMO,YANP;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,MAAIA,MAAM,CAACC,IAAP,KAAgBR,WAApB,EAAiC;AAC/B,UAAM;AAAES,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,MAAb;AAAqBC,MAAAA;AAArB,QAAiCL,MAAM,CAACM,OAA9C;AACA,UAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAN,CAAWC,IAAX,CAAiBC,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYA,EAAE,GAAGC,KAA3C,CAAjB;;AACA,QAAII,QAAJ,EAAc;AACZ,YAAMI,QAAQ,GAAGZ,KAAK,CAACS,IAAN,CAAWI,GAAX,CAAgBC,QAAD,IAAc;AAC5C,YAAIA,QAAQ,CAACX,EAAT,KAAgBA,EAAE,GAAGC,KAAzB,EAAgC;AAC9B,cAAIW,SAAS,GAAGD,QAAQ,CAACT,MAAT,GAAkBA,MAAlC;;AACA,cAAIU,SAAS,GAAGD,QAAQ,CAACE,GAAzB,EAA8B;AAC5BD,YAAAA,SAAS,GAAGD,QAAQ,CAACE,GAArB;AACD;;AACD,iBAAO,EAAE,GAAGF,QAAL;AAAeT,YAAAA,MAAM,EAAEU;AAAvB,WAAP;AACD,SAND,MAMO;AACL,iBAAOD,QAAP;AACD;AACF,OAVgB,CAAjB;AAWA,aAAO,EAAE,GAAGd,KAAL;AAAYS,QAAAA,IAAI,EAAEG;AAAlB,OAAP;AACD,KAbD,MAaO;AACL,YAAMK,OAAO,GAAG;AACdd,QAAAA,EAAE,EAAEA,EAAE,GAAGC,KADK;AAEdc,QAAAA,IAAI,EAAEZ,OAAO,CAACY,IAFA;AAGdd,QAAAA,KAHc;AAIdC,QAAAA,MAJc;AAKdc,QAAAA,KAAK,EAAEb,OAAO,CAACc,MAAR,CAAe,CAAf,EAAkBC,GALX;AAMdC,QAAAA,KAAK,EAAEhB,OAAO,CAACgB,KAND;AAOdN,QAAAA,GAAG,EAAEV,OAAO,CAACiB;AAPC,OAAhB;AASA,aAAO,EAAE,GAAGvB,KAAL;AAAYS,QAAAA,IAAI,EAAE,CAAC,GAAGT,KAAK,CAACS,IAAV,EAAgBQ,OAAhB;AAAlB,OAAP;AACD;AACF;;AAED,MAAIhB,MAAM,CAACC,IAAP,KAAgBL,gBAApB,EAAsC;AACpC,WAAO,EACL,GAAGG,KADE;AAELS,MAAAA,IAAI,EAAET,KAAK,CAACS,IAAN,CAAWe,MAAX,CAAmBb,IAAD,IAAUA,IAAI,CAACR,EAAL,KAAYF,MAAM,CAACM,OAA/C;AAFD,KAAP;AAID;;AACD,MAAIN,MAAM,CAACC,IAAP,KAAgBP,UAApB,EAAgC;AAC9B,WAAO,EACL,GAAGK,KADE;AAELS,MAAAA,IAAI,EAAE;AAFD,KAAP;AAID;;AACD,MAAIR,MAAM,CAACC,IAAP,KAAgBJ,uBAApB,EAA6C;AAC3C,UAAM;AAAEK,MAAAA,EAAF;AAAMsB,MAAAA;AAAN,QAAgBxB,MAAM,CAACM,OAA7B;AACA,UAAMK,QAAQ,GAAGZ,KAAK,CAACS,IAAN,CAAWI,GAAX,CAAgBF,IAAD,IAAU;AACxCe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,IAAZ;;AACA,UAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhB,EAAoB;AAClB,YAAIsB,KAAK,KAAK,KAAd,EAAqB;AACnB,cAAIV,SAAS,GAAGJ,IAAI,CAACN,MAAL,GAAc,CAA9B;;AACA,cAAIU,SAAS,GAAGJ,IAAI,CAACK,GAArB,EAA0B;AACxBD,YAAAA,SAAS,GAAGJ,IAAI,CAACK,GAAjB;AACD;;AACD,iBAAO,EAAE,GAAGL,IAAL;AAAWN,YAAAA,MAAM,EAAEU;AAAnB,WAAP;AACD,SAND,MAMO;AACL,cAAIA,SAAS,GAAGJ,IAAI,CAACN,MAAL,GAAc,CAA9B;;AACA,cAAIU,SAAS,GAAG,CAAhB,EAAmB;AACjBA,YAAAA,SAAS,GAAG,CAAZ;AACD;;AACD,iBAAO,EAAE,GAAGJ,IAAL;AAAWN,YAAAA,MAAM,EAAEU;AAAnB,WAAP;AACD;AACF,OAdD,MAcO;AACL,eAAOJ,IAAP;AACD;AACF,KAnBgB,CAAjB;AAoBA,WAAO,EAAE,GAAGX,KAAL;AAAYS,MAAAA,IAAI,EAAEG;AAAlB,KAAP;AACD;;AACD,MAAIX,MAAM,CAACC,IAAP,KAAgBN,iBAApB,EAAuC;AACrC,UAAM;AAAEgC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA4B7B,KAAK,CAACS,IAAN,CAAWqB,MAAX,CAChC,CAACC,KAAD,EAAQpB,IAAR,KAAiB;AACf,YAAM;AAAEN,QAAAA,MAAF;AAAUiB,QAAAA;AAAV,UAAoBX,IAA1B;AACAoB,MAAAA,KAAK,CAACF,SAAN,IAAmBxB,MAAnB;AACA0B,MAAAA,KAAK,CAACH,UAAN,IAAoBN,KAAK,GAAGjB,MAA5B;AACA,aAAO0B,KAAP;AACD,KAN+B,EAOhC;AAAEF,MAAAA,SAAS,EAAE,CAAb;AAAgBD,MAAAA,UAAU,EAAE;AAA5B,KAPgC,CAAlC;AASA,WAAO,EAAE,GAAG5B,KAAL;AAAYgC,MAAAA,WAAW,EAAEH,SAAzB;AAAoCI,MAAAA,YAAY,EAAEL;AAAlD,KAAP;AACD;;AACD,QAAM,IAAIM,KAAJ,CAAW,gBAAejC,MAAM,CAACC,IAAK,iBAAtC,CAAN;AACD,CAhFD;;AAkFA,eAAeH,YAAf","sourcesContent":["import {\n  ADD_TO_CART,\n  CLEAR_CART,\n  COUNT_CART_TOTALS,\n  REMOVE_CART_ITEM,\n  TOGGLE_CART_ITEM_AMOUNT,\n} from \"../actions\";\n\nconst cart_reducer = (state, action) => {\n  if (action.type === ADD_TO_CART) {\n    const { id, color, amount, product } = action.payload;\n    const tempItem = state.cart.find((item) => item.id === id + color);\n    if (tempItem) {\n      const tempCart = state.cart.map((cartItem) => {\n        if (cartItem.id === id + color) {\n          let newAmount = cartItem.amount + amount;\n          if (newAmount > cartItem.max) {\n            newAmount = cartItem.max;\n          }\n          return { ...cartItem, amount: newAmount };\n        } else {\n          return cartItem;\n        }\n      });\n      return { ...state, cart: tempCart };\n    } else {\n      const newItem = {\n        id: id + color,\n        name: product.name,\n        color,\n        amount,\n        image: product.images[0].url,\n        price: product.price,\n        max: product.stock,\n      };\n      return { ...state, cart: [...state.cart, newItem] };\n    }\n  }\n\n  if (action.type === REMOVE_CART_ITEM) {\n    return {\n      ...state,\n      cart: state.cart.filter((item) => item.id !== action.payload),\n    };\n  }\n  if (action.type === CLEAR_CART) {\n    return {\n      ...state,\n      cart: [],\n    };\n  }\n  if (action.type === TOGGLE_CART_ITEM_AMOUNT) {\n    const { id, value } = action.payload;\n    const tempCart = state.cart.map((item) => {\n      console.log(item);\n      if (item.id === id) {\n        if (value === \"inc\") {\n          let newAmount = item.amount + 1;\n          if (newAmount > item.max) {\n            newAmount = item.max;\n          }\n          return { ...item, amount: newAmount };\n        } else {\n          let newAmount = item.amount - 1;\n          if (newAmount < 1) {\n            newAmount = 1;\n          }\n          return { ...item, amount: newAmount };\n        }\n      } else {\n        return item;\n      }\n    });\n    return { ...state, cart: tempCart };\n  }\n  if (action.type === COUNT_CART_TOTALS) {\n    const { new_amount, new_items } = state.cart.reduce(\n      (total, item) => {\n        const { amount, price } = item;\n        total.new_items += amount;\n        total.new_amount += price * amount;\n        return total;\n      },\n      { new_items: 0, new_amount: 0 }\n    );\n    return { ...state, total_items: new_items, total_amount: new_amount };\n  }\n  throw new Error(`No Matching \"${action.type}\" - action type`);\n};\n\nexport default cart_reducer;\n"]},"metadata":{},"sourceType":"module"}